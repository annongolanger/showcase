// This file was generated by counterfeiter
package dataservicefakes

import (
	"sync"

	"github.com/benwaine/artistprof/artiste/dataservice"
	"github.com/benwaine/artistprof/artiste/dataservice/clients"
)

type FakeArtistGetter struct {
	GetArtistStub        func(artistId string) (clients.Artist, error)
	getArtistMutex       sync.RWMutex
	getArtistArgsForCall []struct {
		artistId string
	}
	getArtistReturns struct {
		result1 clients.Artist
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeArtistGetter) GetArtist(artistId string) (clients.Artist, error) {
	fake.getArtistMutex.Lock()
	fake.getArtistArgsForCall = append(fake.getArtistArgsForCall, struct {
		artistId string
	}{artistId})
	fake.recordInvocation("GetArtist", []interface{}{artistId})
	fake.getArtistMutex.Unlock()
	if fake.GetArtistStub != nil {
		return fake.GetArtistStub(artistId)
	} else {
		return fake.getArtistReturns.result1, fake.getArtistReturns.result2
	}
}

func (fake *FakeArtistGetter) GetArtistCallCount() int {
	fake.getArtistMutex.RLock()
	defer fake.getArtistMutex.RUnlock()
	return len(fake.getArtistArgsForCall)
}

func (fake *FakeArtistGetter) GetArtistArgsForCall(i int) string {
	fake.getArtistMutex.RLock()
	defer fake.getArtistMutex.RUnlock()
	return fake.getArtistArgsForCall[i].artistId
}

func (fake *FakeArtistGetter) GetArtistReturns(result1 clients.Artist, result2 error) {
	fake.GetArtistStub = nil
	fake.getArtistReturns = struct {
		result1 clients.Artist
		result2 error
	}{result1, result2}
}

func (fake *FakeArtistGetter) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getArtistMutex.RLock()
	defer fake.getArtistMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeArtistGetter) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ dataservice.ArtistGetter = new(FakeArtistGetter)
